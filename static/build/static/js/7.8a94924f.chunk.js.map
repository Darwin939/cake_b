{"version":3,"sources":["store/API.js","components/Skeleton/index.js","components/ContainerFluid/index.js","components/TodoItem/index.js","store/actions/TodoList/TodoList.js","sections/TodoList/index.js","pages/TodoList/index.js"],"names":["API","Skeleton","props","width","height","className","styleSheet","document","styleSheets","name","Math","floor","Date","now","random","keyframes","insertRule","cssRules","length","e","style","background","animation","ContainerFluid","children","days","TodoItem","day","data","index","map","title","customer","username","URI","TodoList","dispatch","useDispatch","todo","useSelector","state","todoList","useEffect","type","fetch","method","then","response","json","payload","catch","err","useState","getDate","currentDate","setCurrentDate","currentWeekData","curr","getFullYear","getMonth","i","first","getDay","setDate","toLocaleDateString","push","fillCurrentWeek","todoForDay","a","deadline","Icon","onClick","isFetching","element","Calendar"],"mappings":"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","file":"static/js/7.8a94924f.chunk.js","sourcesContent":["export const API = \"http://localhost:8000/\";\n","import React from \"react\";\n\nconst Skeleton = (props) => {\n  const { width, height, className } = props;\n  const styleSheet = document.styleSheets[0];\n  const name =\n    \"move-gradient-\" + Math.floor(Date.now() + Math.random() * 1000000);\n  const keyframes = `@keyframes ${name} {\n  from{background-position: ${-width}px;}\n  to {\n    background-position: calc(-100% + ${width * 2}px);\n  }\n}`;\n  try {\n    styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n  } catch (e) {}\n  const style = {\n    width: `${width}px`,\n    height: `${height}px`,\n    background: `linear-gradient(\n        90deg,\n        rgba(224, 224, 224, 1) 0px,\n        rgba(255, 255, 255, 1) ${width / 2}px,\n        rgba(224, 224, 224, 1) ${width}px\n  )`,\n    animation: `${name} 3s infinite linear`,\n  };\n\n  return (\n    <div className={`animation-skeleton rounded ${className}`} style={style} />\n  );\n};\n\nexport default Skeleton;\n","import React from \"react\";\n// Если нет правой части\nconst ContainerFluid = ({ children }) => {\n  return (\n    <div className=\"w-100 bg-white rounded mv-20 max-width-990px\">\n      {children}\n    </div>\n  );\n};\n\nexport default ContainerFluid;\n","import React from \"react\";\nconst days = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"];\n\nconst TodoItem = ({ day, data, index }) => {\n  return (\n    <div className=\"d-flex w-100 h-150px bg-gray rounded border-bottom hover-float \">\n      <div className=\"border-grey-right text-align-center font-size-20 text-muted\">\n        <div className=\"p-15 text w-150px\">\n          {day} {days[index]}\n        </div>\n      </div>\n      <div className=\"w-100 d-flex overflow-hidden-y\">\n        {data.map((e) => (\n          <div\n            className=\"min-width-200px max-width-200px h-150px p-15 cursor-pointer\"\n            title={e.customer.username}\n          >\n            <div className=\"h-100 bg-white border-blue-left-3px rounded-right p-5 hover-border hover-float text-break\">\n              <div className=\"mb-10 text-muted\"> для {e.customer.username}</div>\n              <div>{e.title}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default TodoItem;\n","import { API } from \"../../API\";\nconst URI = `${API}api/todo/`;\n\nexport const getTodoList = () => {\n  return (dispatch) => {\n    dispatch({\n      type: \"GET_TODO_LIST_FETCHING\",\n    });\n    return fetch(URI, {\n      method: \"get\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: \"GET_TODO_LIST_SUCCESS\",\n          payload: data,\n        });\n      })\n      .catch((err) =>\n        dispatch({\n          type: \"GET_TODO_LIST_ERROR\",\n          payload: err,\n        })\n      );\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport TodoItem from \"../../components/TodoItem\";\nimport Icon from \"../../components/Icon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodoList } from \"../../store/actions/TodoList/TodoList\";\nimport Skeleton from \"../../components/Skeleton\";\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const todo = useSelector((state) => state.todoList);\n  useEffect(() => {\n    dispatch(getTodoList());\n  }, []);\n\n  const [currentDate, setCurrentDate] = useState(new Date().getDate());\n  //current week to display on screen\n  let currentWeekData = [];\n  const fillCurrentWeek = () => {\n    let curr = new Date(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      currentDate\n    );\n    for (let i = 1; i <= 7; i++) {\n      let first = curr.getDate() - curr.getDay() + i;\n      let day = new Date(curr.setDate(first)).toLocaleDateString();\n      currentWeekData.push(day);\n    }\n  };\n  fillCurrentWeek();\n  //get todo's from data to specific day in week\n  const todoForDay = (day) => {\n    //unix in data to date\n    let a = []; //return data only for chosen day\n    todo.data.map((e) => e.deadline === day && a.push(e));\n    return a;\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between h-50px align-items-center pg-20\">\n        <div title=\"Назад\">\n          <Icon\n            name=\"back\"\n            className=\"fill-dark w-30px cursor-pointer hover-blue\"\n            onClick={() => setCurrentDate(currentDate - 7)}\n          />\n        </div>\n        <div className=\"font-size-20\">Мои заказы на эту неделю</div>\n        <div title=\"Вперед\">\n          <Icon\n            name=\"back\"\n            className=\"fill-dark w-30px cursor-pointer transform-rotate-180 hover-blue\"\n            onClick={() => setCurrentDate(currentDate + 7)}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex flex-column border-grey\">\n        {todo.isFetching\n          ? currentWeekData.map(() => (\n              <Skeleton height={150} width=\"970\" className=\"m-10\" />\n            ))\n          : currentWeekData.map((element, i) => (\n              <div>\n                <TodoItem day={element} data={todoForDay(element)} index={i} />\n              </div>\n            ))}\n      </div>\n    </div>\n  );\n};\nexport default TodoList;\n","import React from \"react\";\nimport TodoList from \"../../sections/TodoList/\";\nimport ContainerFluid from \"../../components/ContainerFluid\";\n\nconst Calendar = () => {\n  return (\n    <ContainerFluid>\n      <TodoList />\n    </ContainerFluid>\n  );\n};\n\nexport default Calendar;\n"],"sourceRoot":""}